## 笔试

### 乐水量化

#### 简答

```cpp
1、两个个位数加法时间复杂度是1，两个个位数乘法时间复杂度也是1。
问：两个n位数加法时间复杂度和n位数乘法时间复杂度以及怎么优化乘法
2、利用并行计算优化一段程序
3、两个火车被空投到一段南北铁路两端，利用四行代码，为两列火车设计自动化相撞程序
    a)north 1m
    b)south 1m
    c)goto line xxx
    d)if find 降落伞 goto line xxx
a
c 1
a
b
d 1 
```

#### 编程

```cpp
1、最大全1子矩形（1，0） https://leetcode.cn/problems/maximal-rectangle/
2、m*n的矩阵，元素为w[i,j]=i*j，给出第k小(m,n 3e4) https://leetcode.cn/problems/kth-smallest-number-in-multiplication-table/
3、3维接雨水 https://leetcode.cn/problems/trapping-rain-water-ii/
4、撞车，给出每个车的位置和速度，追尾后两辆车合体，速度变成最慢的那个，求出每辆车的追尾时间，不追尾-1 https://leetcode.cn/problems/car-fleet-ii/
5、买卖股票，反悔贪心原题（每种1/n个），现在是手里只能把握一只股票，并加上了最多买卖k次的限制 https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-iv/
```

### 量派量化-c++开发工程师

#### 选择

```cpp
主要是c++,还有linux，计网，数据库和OS
1.c++ 虚函数，父亲指针指向孩子对象，调用函数分析
#include <iostream>
using namespace std;
class A{
public:
    virtual void p(){
        cout<<"aaa"<<endl;
        px();
    }
    virtual void px(){
        cout<<"!a"<<endl;
    }
};
class B:A{
public:
    virtual void p(){
        cout<<"bbb"<<endl;
        px();
    }
    virtual void px(){
        cout<<"!b"<<endl;
    }
};

int main() {
    A* a = (A*)new B();//A* a=new B() 相同
    a->p();
    return 0;
}//输出 bbb\n!b\n
2.void disp()和void disp() const,调用disp()发生什么
3.004对应Linux文件的什么权限，例如"-------w-"，还有仨忘了
4.Seq=1,seq=12360建立连接返回什么
5.五种排序，有几种是调用完不满足相对顺序的(相同的数之间的相对顺序)
6.ln wen1 wen2 (Linux)建立了什么链接//硬链接，源文件是wen1，目标文件是wen2
   ln -s wen1 wen2//软链接
7.#include "bits/stdc++.h"
using namespace std;
struct aa{
    int a[10];
}ax;
struct bb{
    aa* ptr;
    char a[0];
}bx;
int main() {
    cout<<sizeof(bx)<<endl;
    return 0;
} 32位机器，8位对齐，输出多少
    
......
```

#### 编程

```cpp
1.二进制字符串加法
2.寻找最长重复子串,例如"abab"，ab重复（有个进阶问题，要求空间O(1),时间O(n^2)），我用的hash应该是O(n),O(n^2)
    deepseek进阶解法：枚举长度，维护答案，遍历位置，维护当前答案，不满足时当前答案清空，反之加一，去掉了区间比较，妙。
```

### 作业帮-算法后端工程师

#### 不定项/单选

```cpp
1.以下哪些页面置换算法不会有Belady现象
OPT CLOCK FIFO LRU
2.Linux 怎么查看进程状态
ps df top ls
3.单例模式
4.事务T1对数据Q有一个共享锁S，事物T2对Q申请一个排他锁X会发生什么
......
```

#### 编程

```cpp
区间种类计数
```

### 美团

#### 单选

```cpp
1. 给前序，后序，给出可能的中序（二叉树）
2. 考了好几个大模型相关的，什么处理长文本用什么方法，一个都不会
3. 拉链式处理哈希冲突，给一串数和哈希函数，求平均查询复杂度//将哈希到同一位置的键值对通过链表（或其他数据结构）串联存储，形成一个“链式桶”（Bucket）
4. 分组交换的相关知识//核心思想是将数据分割为多个小块（称为“分组”或“数据包”），每个分组独立通过网络传输，最终在目的地重新组装为完整数据。
...
```

#### 编程

```cpp
1. 回文串数目（每个字母都得轴对称）n=100
2. 给一个排列，求有多少个奇区间，中间的数正好是中位数 n=1e4//遍历中位数即可，O(n^2)
3. 1-n的数轴，起点在k。Q次操作，L向左一格，在1不动；R向右一格，在n不动；？可以向左也可以向右，问最后数轴上哪些位置有可能是终点。n=1e6,Q=1e6
    /*应该这么说，遇到 问号 视为左 shift 1 位，然后如果不存在右边（+2）的数字，则分裂出 1 个来
    {3} -> {2, 4}（全局 -1 变成 2，再分裂出一个 4）
    所以只需要额外维护一个 set，存那些 x 在当前序列中，但 x+2 不存的那些数字
    这个地方的变化是 O(q) 次的，所以是 (n+q)log
    
    比如你 delta = 0，set = {2}，遇到了 ？
    变成 delta = -1, set = {2, 4}（其实是 {1, 3}）
    这时候 RIGHT={4} , 2 的 x+2 存在 set 中，所以 2 不用放入 RIGHT
    然后又遇到了 ？，下一步 delta = -2，set={2, 4, 6}（6 是从 RIGHT 里面取出 4 扩展得到的，然后 RIGHT={6}，因为 2 4 的 +2 都在 set 里面）；但这里你发现 delta = -2, set 最小的 2 - 2 = 0，那么你把 set 的 2 改成 1-delta = 3 就行了
    所以第二个 ? 结束以后 set = {3, 4, 6}，当然这里也要更新下 RIGHT={3, 6} 了
    本质就是你抠着一个原理：每个 0 变成 1 之后几乎不会消失，唯一消失的可能是被移到边界，但这样的消失至多只有 q 个，所以只要维护每次 0 到 1 的变化，复杂度就是对的
    */
```

### 米哈游

#### 单选/不定项

```cpp
int a[5];
a[3]=128;
short* s=(short*)a;
s[7]=2;
在小端序的机器上以16进制输出a[3]是多少//80 00 02 00
```

#### 编程

```cpp
1.01串，n次右移组成的矩阵，找到一个最大的三角形/矩形的面积
```

### OPPO

#### 单选

```cpp
1. 权威DNS服务器是做什么的
2. 共享信箱、私人信箱、公共信箱哪些是需要操作系统分配的
3. 我有一个数据库，有大量重复的数据，我该怎么查询数据种类数最快
4. 10个并发进程，同一变量D，对于变量D的临界区有几个关键代码段
5. HTTP协议中If-Modified-Since头是干什么的
```

#### 编程

```cpp
1. 1145子序列计数
2. 最小分割数组，使得每一块的|和小于等于k
```



### 周哥

```cpp
1. 内存管理方面，如何模拟物理内存不足的情况？
    物理内存和虚拟内存之间有一个映射关系，我是用位图实现的，定义位图的最大容量即可限制物理内存，位图占满时物理内存不足。
    是否实现过 LRU？用的是什么数据结构？
    实现的是纯按需调页，不考虑预调。没有考虑预调失败和缓存污染，因此只使用了一个双向链表和一个哈希表来实现。
    有没有测试过命中率？
    
    TLB 失效时的异常处理流程是怎样的？
    先查看页表，相应的虚拟内存是否有物理页面映射，有就直接更新TLB;没有的时候，发生缺页故障，陷入内核，为虚拟页匹配物理页；若物理页不足则使用页面置换算法替换物理页面给该虚拟页，足够则直接分配；返回用户态，更新TLB。
        
2. 同步机制方面，说一下 wait() 和 signal() 是什么？
    
   你的实现细节？
   
   以及如何使用？
   
3. 进程管理方面，你是否实现了优先级抢占？
        
   如何解决饥饿问题？
   动态更新优先级。
   当上下文切换的时候，你如何选择的下一个线程？
   
   时间复杂度是？
   
```



## 面试

### 腾讯-pcg-QQ-QQ频道-后台开发

#### 编程

```cpp
1. 链表反转
2. LRU缓存（如何实现并发安全）
```

#### 问答

```cpp
1. 一个服务器出问题了，你现在能远程连接它，你该怎么排查问题//日志
    1.1 电脑卡了，你该怎么排查问题
2. 数据库慢查询是什么//比较慢的查询，如何优化
3. 我刚刚写的LRU缓存是并发不安全的，怎么让它并发安全
    3.1 原子变量+锁//说我用了三个原子变量，感觉意思是要减少原子变量？
    3.2 锁//慢了
4. acid是什么，怎么实现acid//原子性，一致性，隔离性，持久性
5. TCP和UDP有什么区别
```

### 腾讯-wxg-基础架构-后台开发 

#### 问答

```cpp
1. 你们是学校的几队
2. 你在队内是主力吗，你们怎么分工的
3. 你在沈阳站做过什么别人没做出来的题吗
4. 你在赛场上做过什么别人做不出来的题吗
5. 知道inode吗//索引节点，存储文件元数据，文件属性及磁盘位置
6. 怎么实现页面置换的
7. 怎么实现缺页故障的
8. 知道写时复制吗，支持写时复制吗//复制时共享原始数据，只有写的时候才修改
9. 内存碎片怎么管理//bitmap管理空闲内存
```

#### 编程

```cpp
1. 模拟，给一个字符串转换成数字，只能存int，需要判断什么时候溢出
2. 两个有序链表合并
3. random 0-65535，在30万人里随机抽取十万人 （rd1*65536+rd2，高于某个65535*65535-?就重投，抽到同一个也重投）
```

### 腾讯-wxg-公众号&小程序&微信小店团队-后台开发  3-21

#### 编程

```cpp
1. {[()]}优先级括号匹配
2. rand39->rand50
3. 字符矩阵匹配字符串，矩阵每个元素用一次，只能向右或者向下
4. 链表奇偶节点分割
```

#### 问答

```cpp
1. 浏览器的标签页是进程还是线程
2. 为什么是进程
3. 那为什么不用线程
4. 你看看任务管理器
5. 为什么是进程
6. 服务器有个5000个线程的线程池，如果服务器在等待客户端发送请求，但是网速比较慢就一直等待，卡住了，我应该怎么做去避免
7. I/O多路复用知道吗，你描述一下
8. 可以用I/O多路复用解决吗
9. 知道协程吗
10. 你知道协程挂起怎么实现的吗
11. 看过协程源码吗
12. 用过socket编程吗
13. A机给B机发送两个文件，我怎么编程实现
14. 不用描述协议栈和底层，你用write，有文件描述符，你还要传什么信息
15. 介绍一下你的操作系统项目
16. 什么是文件索引
17. 什么是线程屏障
```

### 乾象投资-后台开发-一面 

```cpp
// 给你一个整数数组 prices, 其中 prices[i] 表示某种商品第 i 天的价格。
// 在每一天，你可以决定是否购买和/或出售商品，每一天存储一单位商品需要花费s元成本。你最多可以购买和出售一次商品。计算你能获得的 最大 利润 。

// followup
// 在前一问的基础上，你最多可以完成k笔交易（k次购买和出售），计算你能获得的 最大 利润 。
// 注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的商品），但可以在同一天出售后购买。

https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-iv/description/
```

### 乾象投资-后台开发-二面 4-1

```cpp
对方是个ap高手
题目如下，考你实际工程能力，光速寄
    

struct Trade {
    double volume, price; // 成交量和成交价格
    size_t update_time; // 成交时间，单位为毫秒
    std::string code; // 合约代码
};

// 对于每个code，将一段时间内的若干个trades合成一个tick并publish
struct Tick {
    double volume; // trades中volume的和
    double max_price, min_price; // trades中price的最大值和最小值
    double first_price, last_price; // 按照trade中的update time,第一个trade price和最后一个trade price
    size_t update_time; // 最后一笔trade的update_time
    std::string code; // 合约代码
};

class GenerateTickFromTrade {
public:
    /* 
    每个tick希望包含kTickWindowSizeMs的trades。
    例如：kTickWindowSizeMs = 5，update time of trades = [1, 3, 2, 5, 6, 9, 11, ...]
        则 [1, 3, 2, 5] 生成一个tick，[6, 9] 生成一个tick
    */
    static const size_t kTickWindowSizeMs;
    void NotifyTradeEvent(const Trade& trade);
// TODO: 请实现这个函数。trade的update time因为网络抖动可能不是严格有序
    
    void PublishTick(const Tick& tick); // 已实现。希望pulish tick的时间和tick中update_time的延迟尽量小且严格递增
private:
    // 添加你需要的代码
};

// 对于每个code，将一段时间内的若干个trades合成一个tick并publish
struct Tick {
    double volume; // trades中volume的和
    double max_price, min_price; // trades中price的最大值和最小值
    double first_price, last_price; // 按照trade中的update time,第一个trade price和最后一个trade price
    size_t update_time; // 最后一笔trade的update_time
    std::string code; // 合约代码
};
```

### 腾讯-cdg-腾讯广告-后台开发  3-27

#### 编程

```cpp
1. 最大子段和
2. 股票买卖的最佳时机  https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/  
```

#### 问答

```cpp
1. TCP三次握手
2. 我要实现一个tcp_sever，需要使用什么函数
3. time_wait为什么出现
4. 出现大量time_wait有什么坏处
5. 怎么查看有多少连接出现了time_wait//netstat
6. epoll知道吗
7. 用什么函数实现//epoll_create创建一个epoll对象，epoll_ctl将需要监视的socket添加，调用epoll_wait等待数据
8. 为什么比select快//除了红黑树，事件驱动，还有epoll支持边缘触发，使得epoll_wait系统调用次数减少，效率更高
9. 触发方式//边缘触发，苏醒一次，然后read直到读完；水平触发，不停地苏醒去读
10. 边缘触发是阻塞式还是非阻塞式//使用非阻塞 I/O，通过循环读取直到返回 EAGAIN 或 EWOULDBLOCK，确保一次性处理完所有数据；若使用阻塞 I/O，当调用 read 或 write 时，若数据未完全处理（如缓冲区仅部分填满），操作会阻塞等待更多数据，导致进程无法响应其他事件
11. 进程间通信方式
12. 两个进程同时写文件，怎么防止冲突//系统级文件锁（如 flock）
13. 我要设计一个队列，怎么线程安全
14. 智能指针
15. shared_ptr和weak_ptr区别
16. 指针和引用的区别//指针：是一个独立变量，存储目标对象的内存地址。引用：是目标对象的别名，与目标共享同一内存地址
17. move()是什么//移动语义,将任何左值（有明确内存地址的对象）或右值（临时对象）无条件转换为右值引用
18. 进程间通信方式
19. 两个进程同时写文件，怎么防止冲突//系统级文件锁（如 flock）
20. 项目遇到过什么困难
21. 用过gpt辅助吗
22. 未来有什么规划
```

### 美团-基础架构-后台开发-一面 3-31

#### 编程

```cpp
1. 两个栈实现队列（口头）
2. 最长的无重复字符的子串（写的不太好，用了个map）
    
后续：如何优化，存lst，维护左指针；如果给的是字节流呢？
```

#### 问答

```cpp
1. 怎么新增系统调用接口的
2. 权限管理怎么设计的
3. 内存管理和进程调度呢
4. 置换算法如何比较的
5. 实际应用了吗

1. 指针和引用是什么
2. 有什么区别
3. 他们都可以修改吗
4. STL是什么
5. 对他们分类
6. 内联函数可以是虚函数吗
    
1. DNS是做什么的
2. http和https有什么区别
3. 加密过程是什么样的
    
1. 用过大模型吗，用在哪些方面
2. 用什么来辅助写代码的
3. 除了重复性的一些工作，有没有什么创新的想法但是技术栈不足，靠着ai在实现的
4. 进展如何
5. 你们学校对这方面是怎么看的
    
反问：
1. base在哪//北京
2. 我能通过吗//告诉我c++不熟，然后建议我可以利用ai增加我的实际项目经历（感觉寄了）
3. 你们做什么//以前是美团平台部，做一些自动化的测试工具，现在在鸡架，还不知道要做什么？
```

###  美团-基础架构-后台开发-二面 4-1

```cpp
问了问项目（约20min）
虚函数怎么实现
vector和list用过吗，有什么区别
事务的四个性质
乐观锁和悲观锁

transform层是什么
注意力机制是什么
提示词工程是什么（都不会）
你在大模型方面的应用
你还有什么创意，发散一下


反问：
1. 我能做什么。//他们正在做ai辅助编程插件，可能让我加入。
2. 流程。//转换语言，熟悉项目，熟悉一整个开发流程，尽早来。早十晚七。
```

